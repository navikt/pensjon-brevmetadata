name: NAIS Deploy

on:
  workflow_dispatch:
  push:

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/pensjon-brevmetadata:${{ github.sha }}
  LATEST_IMAGE: docker.pkg.github.com/${{ github.repository }}/pensjon-brevmetadata:latest

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - name: Setup cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B package --file pom.xml
      - name: Build Docker image
        run: |
          docker build -t ${IMAGE} .
      - name: Login to Github Package Registry
        env:
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$GITHUB_REPOSITORY" --password-stdin docker.pkg.github.com
      - name: Push Docker image
        run: "docker push ${IMAGE}"
      - name: Tag latest docker image
        run: "docker tag ${IMAGE} ${LATEST_IMAGE}"
      - name: Push latest docker image
        run: "docker push ${LATEST_IMAGE}"

  deploy-to-dev-default:
    name: Deploy to dev - default
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yaml
          VAR: image=${{ env.IMAGE }}
          VARS: nais/dev-default.yaml
          ENVIRONMENT: dev-gcp:pensjonsbrev:default

  deploy-to-dev-prodlik:
    name: Deploy to dev - prodlik
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yaml
          VAR: image=${{ env.IMAGE }}
          VARS: nais/dev-prodlik.yaml
          ENVIRONMENT: dev-gcp:pensjonsbrev:prodlik

  deploy-to-prod:
    name: Deploy to prod
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: deploy-to-dev-default
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/nais.yaml
          VAR: image=${{ env.IMAGE }}
          VARS: nais/prod.yaml

# TODO: PL-5232 - Lar disse ligge frem til vi er sikker p√• at det fungerer for pesys.
#  deploy-to-dev-pensjonsbrev:
#    name: Deploy to dev default
#    if: github.ref == 'refs/heads/master'
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Deploy brevmetadata to dev-fss default
#        uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: dev-fss
#          RESOURCE: nais/nais-dev.yml
#          VAR: environmentname=default,application=pensjon-brevmetadata,ingress=https://pensjon-brevmetadata-pensjonsbrev.dev.adeo.no,unleashurl=https://unleash.nais.io/api/
#      - name: Deploy brevmetadata to dev-sbs
#        uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: dev-sbs
#          RESOURCE: nais/nais-dev.yml
#          VAR: environmentname=default,application=pensjon-brevmetadata,ingress=https://pensjon-brevmetadata-pensjonsbrev.dev.nav.no,unleashurl=https://unleash.nais.io/api/
#
#  deploy-to-dev-t4:
#    name: Deploy to dev t4
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Deploy brevmetadata to dev-fss t4
#        uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: dev-fss
#          RESOURCE: nais/nais-dev.yml
#          VAR: environmentname=t4,application=pensjon-brevmetadata-t4,ingress=https://pensjon-brevmetadata-t4-pensjonsbrev.dev.adeo.no,unleashurl=https://unleash.nais.io/api/
#
#  deploy-to-dev-prodlik:
#    name: Deploy to dev prodlik
#    if: github.ref == 'refs/heads/master'
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Deploy brevmetadata to dev-fss prodlik
#        uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: dev-fss
#          RESOURCE: nais/nais-dev.yml
#          VAR: environmentname=prodlik,application=pensjon-brevmetadata-prodlik,ingress=https://pensjon-brevmetadata-prodlik-pensjonsbrev.dev.adeo.no,unleashurl=https://unleash.nais.io/api/
#
#  deploy-to-prod:
#    name: Deploy to prod
#    if: github.ref == 'refs/heads/master'
#    needs: [deploy-to-dev-t4, deploy-to-dev-pensjonsbrev]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Deploy brevmetadata to prod-fss
#        uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: prod-fss
#          RESOURCE: nais/nais-prod-fss.yml
#      - name: Deploy brevmetadata to prod-sbs
#        uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: prod-sbs
#          RESOURCE: nais/nais-prod-sbs.yml
#
#  deploy-to-dev-gcp:
#    name: Deploy to gcp
#    if: github.ref == 'refs/heads/master'
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Deploy to dev-gcp
#        uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: dev-gcp
#          RESOURCE: nais/nais-dev-gcp.yml