name: NAIS Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Deploy to environment
        options:
          - q1
          - q2
          - q5
  push:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B package --file pom.xml
      - name: "Build and publish container image"
        uses: nais/docker-build-push@v0
        env:
          TRIVY_JAVA_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-java-db:1"
        id: docker-build-push
        with:
          team: pensjonsbrev
          image_suffix: pensjon-brevmetadata
          push_image: true
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}

  deploy-to-dev-q1:
    name: Deploy to dev - q1
    permissions:
      contents: read
      id-token: write
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'q1')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yaml,nais/unleash-api-token.yaml
          VAR: image=${{ needs.build.outputs.image }}
          VARS: nais/dev-q1.yaml
          ENVIRONMENT: dev-gcp:pensjonsbrev:q1

  deploy-to-dev-q2:
    name: Deploy to dev - q2
    permissions:
      contents: read
      id-token: write
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'q2')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yaml,nais/unleash-api-token.yaml
          VAR: image=${{ needs.build.outputs.image }}
          VARS: nais/dev-q2.yaml
          ENVIRONMENT: dev-gcp:pensjonsbrev:q2

  deploy-to-dev-q5:
    name: Deploy to dev - q5
    permissions:
      contents: read
      id-token: write
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'q5')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yaml,nais/unleash-api-token.yaml
          VAR: image=${{ needs.build.outputs.image }}
          VARS: nais/dev-q5.yaml
          ENVIRONMENT: dev-gcp:pensjonsbrev:q5

  deploy-to-dev-prodlik:
    name: Deploy to dev - prodlik
    permissions:
      contents: read
      id-token: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yaml,nais/unleash-api-token.yaml
          VAR: image=${{ needs.build.outputs.image }}
          VARS: nais/dev-prodlik.yaml
          ENVIRONMENT: dev-gcp:pensjonsbrev:prodlik

  deploy-to-prod:
    name: Deploy to prod
    permissions:
      contents: read
      id-token: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [deploy-to-dev-prodlik, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: nais/nais.yaml,nais/unleash-api-token.yaml
          VAR: image=${{ needs.build.outputs.image }}
          VARS: nais/prod.yaml
